<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>algodoc</title>
    <link>https://algodoc.star-67.com/docs/algorithm/string/</link>
    <description>Recent content on algodoc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://algodoc.star-67.com/docs/algorithm/string/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rolling Hash</title>
      <link>https://algodoc.star-67.com/docs/algorithm/string/rolling_hash/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://algodoc.star-67.com/docs/algorithm/string/rolling_hash/</guid>
      <description>Rolling Hash # Rolling Hash 是一個字段比對方式，利用移動視窗計算視窗內的 hash 值，將推移視窗的複雜度從 O(n) 降到 O(1)。 做法是將字母視作一個多項式的係數，例如 a~z 對應 1~26，而這個多項式就是 hash function，以 banana 這個字串來說，要找到 ana 這個子字串該怎麼做？
計算 ana 的 hash 值 h，此時我們需要假設一個質數 x，這裡假設 x=31 ， 計算出 ana 的 h 為1551。 \[H(x) = x^2&amp;#43;19x&amp;#43;1\] 移動長度3的視窗，並同時確認 hash 值是否與 h 相同。每次移動視窗需要執行三個步驟：
將多項式同乘 base。 將多項式最後一項 (a0) 加上去。 將最高次剪去。 根據上述步驟，從 ban 轉移到 ana 的過程是：
ban 的 hash值為1972，將多項式乘以 x 得到 61132。 加上 &#39;a&#39;-&#39;a&#39;+1，得到61133。 將 x^3(59582) 減去，得到1551。 另外 hash 很容易因為過大而溢位，實作上通常會對一個夠大的質數取餘，例如我常用的 1e9+7，以下程式碼為了方便說明就沒有取餘數。</description>
    </item>
    
  </channel>
</rss>
